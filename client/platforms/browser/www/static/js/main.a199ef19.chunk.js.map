{
	"version": 3,
	"sources": [
		"../../shared/actions.js",
		"../../shared/utils.js",
		"util/hooks.js",
		"feature/HomePage/HomeScreen.js",
		"feature/FindGame/FindScreen.js",
		"@library/GameConnector/GameConnector.js",
		"util/image.js",
		"feature/Lobby/LobbyScreen.js",
		"feature/Lobby/EditScreen.js",
		"util/dom.js",
		"feature/Lobby/DrawScreen.js",
		"util/cards.js",
		"components/PlayerList.js",
		"components/Cup.js",
		"feature/PlayGame/Gameboard.js",
		"feature/PlayGame/EndgameSpash.js",
		"feature/PlayGame/GameScreen.js",
		"components/GameNavigation.js",
		"GameRouter.js",
		"Game.js",
		"App.js",
		"serviceWorker.js",
		"index.js"
	],
	"names": [
		"emptyAction",
		"actions",
		"createActions",
		"require",
		"SET_USERNAME",
		"name",
		"DISCONNECT",
		"START_GAME",
		"DRAW_CARD",
		"index",
		"SET_CARD_DETAIL",
		"value",
		"detail",
		"suit",
		"SAVE_AVATAR",
		"image",
		"REMAKE_GAME",
		"KICK_PLAYER",
		"sessionId",
		"module",
		"exports",
		"config",
		"Object",
		"keys",
		"map",
		"key",
		"type",
		"fn",
		"reduce",
		"prev",
		"curr",
		"payload",
		"toString",
		"toLowerCase",
		"replace",
		"_",
		"letter",
		"toUpperCase",
		"preventDefault",
		"e",
		"useScrollLock",
		"React",
		"useEffect",
		"document",
		"addEventListener",
		"passive",
		"documentElement",
		"classList",
		"add",
		"removeEventListener",
		"remove",
		"touches",
		"lastTouch",
		"x",
		"y",
		"serializeTouch",
		"touch",
		"clientX",
		"clientY",
		"t",
		"Date",
		"HomeScreen",
		"className",
		"style",
		"paddingTop",
		"src",
		"alt",
		"width",
		"to",
		"FindScreen",
		"GameContext",
		"createContext",
		"GameConnector",
		"props",
		"client",
		"Colyseus",
		"url",
		"state",
		"isJoined",
		"room",
		"messages",
		"initialState",
		"onVisibilityChange",
		"bind",
		"this",
		"onConnect",
		"removeAllListeners",
		"leave",
		"window",
		"localStorage",
		"removeItem",
		"getLsKey",
		"roomId",
		"hidden",
		"instance",
		"JSON",
		"parse",
		"getItem",
		"id",
		"reconnect",
		"location",
		"pathname",
		"joinOrCreate",
		"history",
		"push",
		"setState",
		"onStateChange",
		"onMessage",
		"message",
		"setItem",
		"stringify",
		"pick",
		"_processing",
		"forEach",
		"send",
		"console",
		"log",
		"Provider",
		"children",
		"Component",
		"getSelf",
		"players",
		"useGameState",
		"useContext",
		"result",
		"serializer",
		"useMessageHandler",
		"useRoom",
		"withRouter",
		"getCardImage",
		"path",
		"useRouteMatch",
		"useState",
		"setName",
		"selfName",
		"selfId",
		"hasStarted",
		"setUsername",
		"saveAvatar",
		"onSubmit",
		"activeElement",
		"blur",
		"paddingBottom",
		"isHost",
		"onClick",
		"startGame",
		"player",
		"avatar",
		"kickPlayer",
		"kick",
		"rules",
		"rule",
		"card",
		"position",
		"alignSelf",
		"padding",
		"top",
		"left",
		"color",
		"fontWeight",
		"textShadow",
		"action",
		"textAlign",
		"placeholder",
		"onChange",
		"currentTarget",
		"onBlur",
		"faces",
		"suits",
		"getStatus",
		"initialValue",
		"EditableFace",
		"face",
		"setValue",
		"allElements",
		"querySelectorAll",
		"currentIndex",
		"findIndex",
		"el",
		"isEqualNode",
		"length",
		"focus",
		"moveToNextField",
		"setCardDetail",
		"EditScreen",
		"display",
		"colors",
		"DrawScreen",
		"useHistory",
		"previewData",
		"setPreviewData",
		"brushColor",
		"setBrushColor",
		"isCleared",
		"setClear",
		"img",
		"Image",
		"querySelector",
		"getContext",
		"drawImage",
		"marginBottom",
		"hex",
		"backgroundColor",
		"lineWidth",
		"clear",
		"toDataURL",
		"cardAliases",
		"J",
		"Q",
		"K",
		"A",
		"PlayerList",
		"self",
		"playerId",
		"i",
		"active",
		"filter",
		"join",
		"connected",
		"Array",
		"from",
		"idx",
		"Math",
		"PI",
		"xDisp",
		"sin",
		"yDisp",
		"cos",
		"rad",
		"transform",
		"atan2",
		"edges",
		"getTranslationForIndex",
		"memoize",
		"preselected",
		"selected",
		"args",
		"Gameboard",
		"canDraw",
		"setPreselected",
		"setSelected",
		"initX",
		"initY",
		"setX",
		"setY",
		"duration",
		"setDuration",
		"onTouchStart",
		"unshift",
		"onTouchMove",
		"onTouchEnd",
		"B",
		"timeDiff",
		"max",
		"containerProps",
		"transformValue",
		"useDraggableValue",
		"height",
		"body",
		"getBoundingClientRect",
		"cardStates",
		"deck",
		"isDrawn",
		"perspective",
		"transition",
		"drawCard",
		"edge",
		"Cup",
		"EndgameSplash",
		"clearMessages",
		"useClearMessages",
		"remakeGame",
		"getPlayerName",
		"GameScreen",
		"activePlayer",
		"getPlayerByIndex",
		"yourTurn",
		"useOnMessageReceived",
		"toast",
		"warning",
		"isGameOver",
		"EndgameSpash",
		"GameNavigation",
		"useLocation",
		"handleLeave",
		"confirm",
		"renderHeader",
		"go",
		"GameRouter",
		"hostname",
		"exact",
		"Game",
		"App",
		"autoClose",
		"hideProgressBar",
		"newestOnTop",
		"closeOnClick",
		"rtl",
		"pauseOnVisibilityChange",
		"draggable",
		"pauseOnHover",
		"draggablePercent",
		"isLocalhost",
		"Boolean",
		"match",
		"registerValidSW",
		"swUrl",
		"navigator",
		"serviceWorker",
		"register",
		"scope",
		"then",
		"registration",
		"onupdatefound",
		"installingWorker",
		"installing",
		"onstatechange",
		"controller",
		"onUpdate",
		"onSuccess",
		"catch",
		"error",
		"ReactDOM",
		"render",
		"getElementById",
		"URL",
		"process",
		"href",
		"origin",
		"fetch",
		"headers",
		"response",
		"contentType",
		"get",
		"status",
		"indexOf",
		"ready",
		"unregister",
		"reload",
		"checkValidServiceWorker"
	],
	"mappings": "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",
	"file": "static/js/main.a199ef19.chunk.js",
	"sourcesContent": [
		"const { createActions } = require('./utils');\r\n\r\nconst emptyAction = () => {};\r\n\r\nconst actions = createActions({\r\n\tSET_USERNAME: name => ({ name }),\r\n\tDISCONNECT: emptyAction,\r\n\tSTART_GAME: emptyAction,\r\n\tDRAW_CARD: index => ({ index }),\r\n\tSET_CARD_DETAIL: (value, detail, suit = 'ALL') => ({ value, detail, suit }),\r\n\tSAVE_AVATAR: image => ({ image }),\r\n\tREMAKE_GAME: emptyAction,\r\n\tKICK_PLAYER: sessionId => ({ sessionId })\r\n});\r\n\r\nmodule.exports = actions;\r\n",
		"const toCamelCase = name =>\r\n\tname.toLowerCase().replace(/(_[a-z])/g, (_, letter) => letter[1].toUpperCase());\r\n\r\nconst createActions = config =>\r\n\tObject.keys(config)\r\n\t\t.map(key => ({\r\n\t\t\ttype: key,\r\n\t\t\tfn: config[key]\r\n\t\t}))\r\n\t\t.reduce((prev, curr) => {\r\n\t\t\tconst fn = (...args) => ({\r\n\t\t\t\ttype: curr.type,\r\n\t\t\t\tpayload: curr.fn(...args)\r\n\t\t\t});\r\n\t\t\tfn.toString = () => curr.type;\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[toCamelCase(curr.type)]: fn\r\n\t\t\t};\r\n\t\t}, {});\r\n\r\nmodule.exports = {\r\n\tcreateActions\r\n};\r\n",
		"import React from 'react';\r\n\r\nconst preventDefault = e => e.preventDefault();\r\n\r\nexport const useScrollLock = () => {\r\n\tReact.useEffect(() => {\r\n\t\tdocument.addEventListener('touchmove', preventDefault, { passive: false });\r\n\t\tdocument.documentElement.classList.add('scroll-lock');\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('touchmove', preventDefault);\r\n\t\t\tdocument.documentElement.classList.remove('scroll-lock');\r\n\t\t};\r\n\t});\r\n};\r\nlet startPosition = { x: null, y: null };\r\nlet touches = [];\r\nlet lastTouch = {\r\n\tx: null,\r\n\ty: null\r\n};\r\n\r\nconst serializeTouch = touch => ({\r\n\ttouch: { clientX: touch.clientX, clientY: touch.clientY },\r\n\tt: +new Date()\r\n});\r\n\r\nexport const useDraggableValue = ({ x: initX, y: initY } = {}) => {\r\n\tconst [x, setX] = React.useState(initX || 0);\r\n\tconst [y, setY] = React.useState(initY || 0);\r\n\tconst [duration, setDuration] = React.useState(0);\r\n\r\n\tconst onTouchStart = e => {\r\n\t\tstartPosition = {\r\n\t\t\tx: e.touches[0].clientX,\r\n\t\t\ty: e.touches[0].clientY\r\n\t\t};\r\n\t\tlastTouch = {\r\n\t\t\tx: e.touches[0].clientX,\r\n\t\t\ty: e.touches[0].clientY\r\n\t\t};\r\n\t\ttouches.unshift(serializeTouch(e.touches[0]));\r\n\t\tsetDuration(0);\r\n\t};\r\n\tconst onTouchMove = e => {\r\n\t\ttouches.unshift(serializeTouch(e.touches[0]));\r\n\t\tsetX(x + (lastTouch.x - e.touches[0].clientX));\r\n\t\tsetY(y + (lastTouch.y - e.touches[0].clientY));\r\n\t\tlastTouch = {\r\n\t\t\tx: e.touches[0].clientX,\r\n\t\t\ty: e.touches[0].clientY\r\n\t\t};\r\n\t\tif (touches.length > 8) {\r\n\t\t\ttouches.length = 8;\r\n\t\t}\r\n\t};\r\n\tconst onTouchEnd = () => {\r\n\t\ttry {\r\n\t\t\tconst A = touches[0];\r\n\t\t\tconst B = touches[touches.length - 1];\r\n\t\t\tconst timeDiff = Math.max(0, (1000 - (+new Date() - B.t)) / 20);\r\n\t\t\tsetDuration(timeDiff / 100);\r\n\t\t\tsetX(x + (B.touch.clientX - A.touch.clientX) * (timeDiff / 30));\r\n\t\t\tsetY(y + (B.touch.clientY - A.touch.clientY) * (timeDiff / 30));\r\n\t\t\ttouches = [];\r\n\t\t} catch (e) {\r\n\t\t\t// NO-OP. This just happens sometimes, eh\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\tcontainerProps: {\r\n\t\t\tonTouchStart,\r\n\t\t\tonTouchEnd,\r\n\t\t\tonTouchMove\r\n\t\t},\r\n\t\ttransformValue: { x, y, duration }\r\n\t};\r\n};\r\n",
		"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useScrollLock } from '../../util/hooks';\r\n\r\nexport const HomeScreen = () => {\r\n\tuseScrollLock();\r\n\r\n\treturn (\r\n\t\t<div className=\"column-layout\" style={{ paddingTop: '100px' }}>\r\n\t\t\t<img src=\"/images/logo.png\" alt=\"Kings Cup!\" width=\"80%\" />\r\n\t\t\t<Link to=\"/game\" className=\"CTA\">\r\n\t\t\t\tPlay!\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeScreen;\r\n",
		"import React from 'react';\r\n\r\nexport const FindScreen = () => <div>Find Screen (TODO)</div>;\r\n\r\nexport default FindScreen;\r\n",
		"import React from 'react';\r\nimport * as Colyseus from 'colyseus.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { pick } from 'lodash';\r\n\r\nexport const GameContext = React.createContext();\r\n\r\nclass GameConnector extends React.Component {\r\n\tclient;\r\n\tstate;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.client = new Colyseus.Client(props.url);\r\n\t\tthis.state = {\r\n\t\t\tisJoined: false,\r\n\t\t\troom: null,\r\n\t\t\tmessages: [],\r\n\t\t\t...props.initialState\r\n\t\t};\r\n\t\tthis.onVisibilityChange = this.onVisibilityChange.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.onConnect();\r\n\t\tdocument.addEventListener('visibilitychange', this.onVisibilityChange);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('visibilitychange', this.onVisibilityChange);\r\n\t\tconst { room } = this.state;\r\n\t\tif (room) {\r\n\t\t\troom.removeAllListeners();\r\n\t\t\troom.leave();\r\n\t\t}\r\n\t\twindow.localStorage.removeItem(this.getLsKey());\r\n\t}\r\n\r\n\tgetLsKey() {\r\n\t\treturn `@@Colyseus_GC_${this.props.roomId}`;\r\n\t}\r\n\r\n\tasync onVisibilityChange() {\r\n\t\tif (!document.hidden) {\r\n\t\t\tawait this.onConnect();\r\n\t\t}\r\n\t}\r\n\r\n\tasync onConnect() {\r\n\t\ttry {\r\n\t\t\tconst { roomId } = this.props;\r\n\t\t\tconst key = this.getLsKey();\r\n\t\t\tconst instance = JSON.parse(window.localStorage.getItem(key) || '{}');\r\n\t\t\tlet room;\r\n\t\t\tif (instance.id && instance.sessionId) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\troom = await this.client.reconnect(instance.id, instance.sessionId);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\twindow.localStorage.removeItem(key);\r\n\t\t\t\t\tif (window.location.pathname === '/') {\r\n\t\t\t\t\t\troom = await this.client.joinOrCreate(roomId);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\troom = await this.client.joinOrCreate(roomId);\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tisJoined: true,\r\n\t\t\t\troom\r\n\t\t\t});\r\n\t\t\troom.onStateChange(this.setState.bind(this));\r\n\t\t\troom.onMessage(message => {\r\n\t\t\t\tif (message === 'FORCE_DC') {\r\n\t\t\t\t\troom.leave();\r\n\t\t\t\t\tthis.props.history.push('/');\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState(state => ({ messages: [...state.messages, message] }));\r\n\t\t\t});\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(pick(room, 'id', 'sessionId', 'name')));\r\n\t\t\tif (this.state._processing) {\r\n\t\t\t\tthis.state._processing.forEach(room.send.bind(room));\r\n\t\t\t\tdelete this.state._processing;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('could not join room', e);\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <GameContext.Provider value={this.state}>{this.props.children}</GameContext.Provider>;\r\n\t}\r\n}\r\n\r\nconst getSelf = ({ room }) => room?.state.players[room?.sessionId] ?? {};\r\n\r\nexport const useGameState = () => {\r\n\tconst state = React.useContext(GameContext);\r\n\tconst result = state?.room?.serializer ?? {};\r\n\tresult.getSelf = getSelf.bind(null, state);\r\n\treturn result;\r\n};\r\n\r\nexport const useMessageHandler = () => {\r\n\tconst state = React.useContext(GameContext);\r\n\tif (state?.room?.send) {\r\n\t\treturn message => {\r\n\t\t\tstate.room.send(message);\r\n\t\t};\r\n\t}\r\n\t// stubbed method when room doesn't exist\r\n\treturn message => {\r\n\t\tstate._processing = [...(state._processing || []), message];\r\n\t};\r\n};\r\n\r\nexport const useOnMessageReceived = fn => {\r\n\tconst state = React.useContext(GameContext);\r\n\tReact.useEffect(() => {\r\n\t\tif (state.messages.length) {\r\n\t\t\tfn(state.messages[state.messages.length - 1]);\r\n\t\t}\r\n\t}, [state.messages.length]);\r\n};\r\n\r\nexport const useClearMessages = () => {\r\n\tconst state = React.useContext(GameContext);\r\n\treturn () => {\r\n\t\tstate.messages = [];\r\n\t};\r\n};\r\n\r\nexport const useRoom = () => {\r\n\tconst state = React.useContext(GameContext);\r\n\treturn state?.room ?? {};\r\n};\r\n\r\nexport default withRouter(GameConnector);\r\n",
		"export const getCardImage = ({ suit, value }) => `/images/cards/${value}_${suit.toUpperCase()}.svg`;\r\n",
		"import React from 'react';\r\nimport { Link, useRouteMatch, withRouter } from 'react-router-dom';\r\nimport { setUsername, startGame, saveAvatar, kickPlayer } from '@kings-cup/shared/actions';\r\nimport { useGameState, useMessageHandler } from './../../@library/GameConnector';\r\nimport { getCardImage } from './../../util/image';\r\n\r\nexport const LobbyScreen = ({ history }) => {\r\n\tconst { path } = useRouteMatch();\r\n\tconst { state = {}, getSelf } = useGameState();\r\n\tconst send = useMessageHandler();\r\n\tconst [name, setName] = React.useState(localStorage.getItem('@KC_Name') || '');\r\n\r\n\tconst { name: selfName, id: selfId } = getSelf();\r\n\tReact.useEffect(() => {\r\n\t\tsetName(selfName || '');\r\n\t}, [selfName]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (state.hasStarted) {\r\n\t\t\thistory.push('/game/play');\r\n\t\t}\r\n\t}, [state.hasStarted]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (localStorage.getItem('@KC_Name')) {\r\n\t\t\tsend(setUsername(localStorage.getItem('@KC_Name')));\r\n\t\t}\r\n\t\tif (localStorage.getItem('@KC_Avatar')) {\r\n\t\t\tsend(saveAvatar(localStorage.getItem('@KC_Avatar')));\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst onSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tsend(setUsername(name));\r\n\t\tdocument.activeElement.blur();\r\n\t\tlocalStorage.setItem('@KC_Name', name);\r\n\t};\r\n\r\n\tconst start = () => {\r\n\t\tsend(startGame());\r\n\t};\r\n\r\n\tconst kick = id => {\r\n\t\tsend(kickPlayer(id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingBottom: '130px' }}>\r\n\t\t\t{getSelf().isHost && (\r\n\t\t\t\t<button onClick={start} type=\"button\" className=\"CTA\">\r\n\t\t\t\t\tStart\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<h2 className=\"row\">Players:</h2>\r\n\t\t\t<ul className=\"notList\">\r\n\t\t\t\t{Object.keys(state?.players ?? {}).map(id => {\r\n\t\t\t\t\tconst player = state.players[id];\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={id} className={`PlayerRow${id === selfId ? ' selected' : ''}`}>\r\n\t\t\t\t\t\t\t<img src={player.avatar} className=\"AvatarContainer\" alt=\"\" />\r\n\t\t\t\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t\t\t\t{player.name || id}\r\n\t\t\t\t\t\t\t\t{player.isHost ? '*' : ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{getSelf().isHost && !player.isHost && (\r\n\t\t\t\t\t\t\t\t<button type=\"button\" onClick={() => kick(id)} className=\"kick-button\">\r\n\t\t\t\t\t\t\t\t\tKick\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"Flex Flex--edges row\">\r\n\t\t\t\t<h2>Rules:</h2>\r\n\t\t\t\t{getSelf().isHost && (\r\n\t\t\t\t\t<Link to={`${path}/edit`} className=\"h2\">\r\n\t\t\t\t\t\t<h2>Edit</h2>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{Object.keys(state?.rules ?? {}).map(id => {\r\n\t\t\t\tconst rule = state.rules[id];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={id} className=\"PlayerRow\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={getCardImage(rule.card)}\r\n\t\t\t\t\t\t\tclassName=\"AvatarContainer AvatarContainer--card\"\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"name\">{rule.rule}</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<div className=\"Fixed Fixed--bottom Fixed--stylish\">\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={`${path}/draw`}\r\n\t\t\t\t\tstyle={{ position: 'relative', alignSelf: 'flex-end', padding: '10px 0 10px 10px' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src={getSelf()?.avatar || ''} className=\"AvatarContainer\" alt=\"\" />\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\ttop: '32%',\r\n\t\t\t\t\t\t\tleft: '21px',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\ttextShadow: '0px 0px 3px white'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSet\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<form onSubmit={onSubmit} action=\"#\" style={{ padding: '10px' }}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{ textAlign: 'left' }}\r\n\t\t\t\t\t\tplaceholder=\"Your name\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={e => setName(e.currentTarget.value)}\r\n\t\t\t\t\t\tonBlur={onSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(LobbyScreen);\r\n",
		"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setCardDetail } from '@kings-cup/shared/actions';\r\nimport { moveToNextField } from '../../util/dom';\r\nimport { useGameState, useMessageHandler } from './../../@library/GameConnector';\r\nimport { getCardImage } from './../../util/image';\r\n\r\nconst faces = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\r\nconst suits = ['Heart', 'Diamond', 'Spade', 'Club'];\r\n\r\nconst getStatus = ({ initialValue, value }) => {\r\n\tswitch (true) {\r\n\t\tcase initialValue === value && value !== '':\r\n\t\t\treturn 'green';\r\n\t\tcase initialValue !== value:\r\n\t\t\treturn 'red';\r\n\t\tcase value === '':\r\n\t\t\treturn 'orange';\r\n\t\tdefault:\r\n\t\t\treturn '';\r\n\t}\r\n};\r\n\r\nconst EditableFace = ({ face, initialValue = '' }) => {\r\n\tconst [value, setValue] = React.useState(initialValue);\r\n\tconst send = useMessageHandler();\r\n\tReact.useEffect(() => {\r\n\t\tsetValue(initialValue);\r\n\t\tif (initialValue !== '') {\r\n\t\t\tmoveToNextField();\r\n\t\t}\r\n\t}, [initialValue]);\r\n\r\n\treturn (\r\n\t\t<li className=\"PlayerRow\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={getCardImage({ suit: 'ALL', value: face })}\r\n\t\t\t\tclassName=\"AvatarContainer AvatarContainer--card\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"name\">\r\n\t\t\t\t<form\r\n\t\t\t\t\taction=\"#\"\r\n\t\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsend(setCardDetail(face, value));\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={`StatusDot ${getStatus({ initialValue, value })}`} />\r\n\t\t\t\t\t<input type=\"text\" value={value} onChange={e => setValue(e.currentTarget.value)} />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport const EditScreen = () => {\r\n\tconst { state } = useGameState();\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingBottom: '120px' }}>\r\n\t\t\t<ul className=\"notList\">\r\n\t\t\t\t{faces.map(face => (\r\n\t\t\t\t\t<EditableFace\r\n\t\t\t\t\t\tface={face}\r\n\t\t\t\t\t\tsuits={suits}\r\n\t\t\t\t\t\tkey={face}\r\n\t\t\t\t\t\tinitialValue={state?.rules[`${face}_ALL`]?.rule ?? ''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<Link to=\"/game/lobby\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"Fixed Fixed--bottom Fixed--stylish\"\r\n\t\t\t\t\tstyle={{ fontWeight: 'bold', padding: '20px', display: 'block' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tDone!\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditScreen;\r\n",
		"export const moveToNextField = () => {\r\n\tconst allElements = document.querySelectorAll('input');\r\n\t//Find the current tab index.\r\n\tconst currentIndex = [...allElements].findIndex(el => document.activeElement.isEqualNode(el));\r\n\tif (currentIndex + 1 < allElements.length) {\r\n\t\tallElements[currentIndex + 1].focus();\r\n\t} else {\r\n\t\tdocument.activeElement.blur();\r\n\t}\r\n};\r\n",
		"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { saveAvatar } from '@kings-cup/shared/actions';\r\nimport DrawableCanvas from 'react-drawable-canvas';\r\nimport { useMessageHandler, useGameState } from '../../@library/GameConnector';\r\nimport { useScrollLock } from '../../util/hooks';\r\nimport './draw.css';\r\n\r\nconst colors = [\r\n\t'#272727',\r\n\t'#fff',\r\n\t'#9d0b0b', // red\r\n\t'#ff7315', // orange\r\n\t'#a35638', // brown\r\n\t'#50d890', // green\r\n\t'#333366', // indigo\r\n\t'#f67280', // pink\r\n\t'#ad62aa' // purple\r\n];\r\n\r\nexport const DrawScreen = () => {\r\n\tconst send = useMessageHandler();\r\n\tconst { getSelf } = useGameState();\r\n\tconst history = useHistory();\r\n\tconst [previewData, setPreviewData] = React.useState(null);\r\n\tconst [brushColor, setBrushColor] = React.useState('#272727');\r\n\tconst [isCleared, setClear] = React.useState(false);\r\n\tconst { avatar } = getSelf();\r\n\r\n\tconst clear = () => {\r\n\t\tsetClear(true);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (isCleared) {\r\n\t\t\tsetClear(false);\r\n\t\t\tsetPreviewData(null);\r\n\t\t}\r\n\t}, [isCleared]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst img = new Image();\r\n\t\timg.src = avatar;\r\n\t\tdocument\r\n\t\t\t.querySelector('canvas')\r\n\t\t\t.getContext('2d')\r\n\t\t\t.drawImage(img, 0, 0);\r\n\t}, [avatar]);\r\n\tuseScrollLock();\r\n\r\n\tconst save = () => {\r\n\t\tconst avatar = document.querySelector('canvas').toDataURL();\r\n\t\tsend(saveAvatar(avatar));\r\n\t\tlocalStorage.setItem('@KC_Avatar', avatar);\r\n\t\thistory.push('/game/lobby');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"column-layout\">\r\n\t\t\t<h1 style={{ marginBottom: 0 }}>Draw your avatar</h1>\r\n\t\t\t<ul className=\"ColorPicker\">\r\n\t\t\t\t{colors.map(hex => (\r\n\t\t\t\t\t<li key={hex} style={{ backgroundColor: hex }} onClick={() => setBrushColor(hex)} />\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"AvatarContainer AvatarContainer--edit\">\r\n\t\t\t\t<DrawableCanvas brushColor={brushColor} lineWidth={8} clear={isCleared} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Fixed Fixed--bottom Fixed--stylish\">\r\n\t\t\t\t<button type=\"button\" onClick={clear}>\r\n\t\t\t\t\tClear\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={() => setPreviewData(document.querySelector('canvas').toDataURL())}\r\n\t\t\t\t>\r\n\t\t\t\t\tPreview\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={save}>Save!</button>\r\n\t\t\t\t{previewData && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={previewData}\r\n\t\t\t\t\t\tclassName=\"AvatarContainer\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tstyle={{ position: 'absolute', top: '-40px', left: 'calc(50% - 25px)' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DrawScreen;\r\n",
		"const cardAliases = {\r\n\tJ: 'Jack',\r\n\tQ: 'Queen',\r\n\tK: 'King',\r\n\tA: 'Ace'\r\n};\r\n\r\nexport const cardDescription = card => `${cardAliases[card.value] || card.value} of ${card.suit}s`;\r\n",
		"import React from 'react';\r\nimport { useGameState } from '../@library/GameConnector';\r\nimport './playerlist.css';\r\n\r\nexport const PlayerList = () => {\r\n\tconst { state = {}, getSelf } = useGameState();\r\n\r\n\tif (!state || !state.players) return null;\r\n\tconst self = getSelf();\r\n\tconst { players } = state;\r\n\treturn (\r\n\t\t<ul className=\"PlayerList notList\">\r\n\t\t\t{Object.keys(players).map((playerId, i) => {\r\n\t\t\t\tconst player = players[playerId];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tkey={playerId}\r\n\t\t\t\t\t\tclassName={[self.id === playerId ? 'self' : '', state.active === i ? 'selected' : '']\r\n\t\t\t\t\t\t\t.filter(i => !!i)\r\n\t\t\t\t\t\t\t.join(' ')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={player.avatar} className=\"AvatarContainer\" />\r\n\t\t\t\t\t\t{player.name || player.id}\r\n\t\t\t\t\t\t<div className={`StatusDot ${player.connected ? 'green' : 'orange'}`} />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default PlayerList;\r\n",
		"import React from 'react';\r\nimport './cup.css';\r\n\r\nconst length = 8;\r\nconst baseLength = 3;\r\n\r\nexport default () => (\r\n\t<div className=\"cup\">\r\n\t\t{Array.from({ length }, (_, i) => i).map(idx => {\r\n\t\t\tconst i = Math.PI * 2 * (idx / length);\r\n\t\t\tconst xDisp = Math.sin(i);\r\n\t\t\tconst yDisp = Math.cos(i);\r\n\t\t\tconst rad = 180 / Math.PI;\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tclassName=\"cup-face\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: `translate3d(${xDisp * 48}px, ${yDisp * 48}px, 80px)\r\n\t\t\t\t\t\trotate3d(0, 0, 1, ${Math.atan2(yDisp, xDisp) * rad + 90}deg)\r\n\t\t\t\t\t\trotate3d(1, 0, 0, 90deg)`\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t})}\r\n\t\t{Array.from({ length: baseLength }, (_, i) => i).map(idx => (\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"cup-base\"\r\n\t\t\t\tkey={idx}\r\n\t\t\t\tstyle={{ transform: `translate3d(0, 0, ${idx * 3}px) scale(${1.15 - idx * 0.05})` }}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</div>\r\n);\r\n",
		"import React from 'react';\r\nimport { memoize } from 'lodash';\r\nimport { drawCard } from '@kings-cup/shared/actions';\r\nimport { useGameState, useMessageHandler } from './../../@library/GameConnector';\r\nimport Cup from '../../components/Cup';\r\nimport { useDraggableValue } from '../../util/hooks';\r\nimport { getCardImage } from './../../util/image';\r\nimport './gameboard.css';\r\n\r\nconst baseTransform = 'rotate3d(1, 0, 0, 66deg) translate3d(5px, -100px, 0)';\r\n\r\nconst edges = ['top', 'bottom', 'left', 'right'];\r\n\r\nconst getTranslationForIndex = memoize(\r\n\t(idx, length, preselected, selected) => {\r\n\t\tconst i = Math.PI * 1.95 * (idx / length);\r\n\t\tconst xDisp = Math.sin(i);\r\n\t\tconst yDisp = Math.cos(i);\r\n\t\tconst rad = 180 / Math.PI;\r\n\t\tswitch (true) {\r\n\t\t\tcase selected === idx:\r\n\t\t\t\treturn '';\r\n\t\t\tcase preselected === idx:\r\n\t\t\t\treturn `translate3d(${xDisp * 220}px, ${yDisp * 220}px, 1px)\r\n\t\t\trotate3d(0, 0, 1, ${Math.atan2(yDisp, xDisp) * rad + 90}deg)`;\r\n\t\t\tdefault:\r\n\t\t\t\treturn `translate3d(${xDisp * 130}px, ${yDisp * 130}px, 1px)\r\n\t\t\trotate3d(0, 0, 1, ${Math.atan2(yDisp, xDisp) * rad + 90}deg)`;\r\n\t\t}\r\n\t},\r\n\t(...args) => args.join('|')\r\n);\r\n\r\nexport const Gameboard = ({ canDraw }) => {\r\n\tconst [preselected, setPreselected] = React.useState(null);\r\n\tconst [selected, setSelected] = React.useState(null);\r\n\tconst { state = {} } = useGameState();\r\n\tconst send = useMessageHandler();\r\n\tconst { containerProps, transformValue } = useDraggableValue({ x: 0, y: 0 });\r\n\tconst { height: compHeight } = document.body.getBoundingClientRect();\r\n\tconst height = compHeight - 135;\r\n\tconst handleClick = index => {\r\n\t\tif (!selected) {\r\n\t\t\tif (index === preselected) {\r\n\t\t\t\tsend(drawCard(index));\r\n\t\t\t\tsetSelected({ ...state.deck[index] });\r\n\t\t\t} else {\r\n\t\t\t\tsetPreselected(index);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst cardStates = state.deck?.map(({ isDrawn }) => isDrawn).join('|');\r\n\tReact.useEffect(() => {\r\n\t\tsetPreselected(null);\r\n\t}, [cardStates]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{selected && (\r\n\t\t\t\t<div className=\"draw-container\">\r\n\t\t\t\t\t<div className=\"card-rule-container\">\r\n\t\t\t\t\t\t<img src={getCardImage(selected)} alt=\"\" />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>{state.rules[`${selected.value}_ALL`]?.rule}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={() => setSelected(null)}>✖</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"container\" {...containerProps} style={{ height, perspective: height }}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"stage\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: `${baseTransform} rotate3d(0, 0, 1, ${transformValue.x}deg)`,\r\n\t\t\t\t\t\ttransition: `transform ${transformValue.duration}s ease-out`\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{state.deck?.map((card, idx) =>\r\n\t\t\t\t\t\tcard.isDrawn ? null : (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tkey={getCardImage(card)}\r\n\t\t\t\t\t\t\t\tsrc=\"/images/cards/BACK.svg\"\r\n\t\t\t\t\t\t\t\t{...(canDraw ? { onClick: () => handleClick(idx) } : {})}\r\n\t\t\t\t\t\t\t\tclassName=\"PlayingCard\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttransform: getTranslationForIndex(idx, state.deck.length, preselected, selected)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{edges.map(edge => (\r\n\t\t\t\t\t\t<div className={`edge ${edge}`} key={edge} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<Cup />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Gameboard;\r\n",
		"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { remakeGame } from '@kings-cup/shared/actions';\r\nimport { useRoom, useClearMessages } from '../../@library/GameConnector';\r\n\r\nexport const EndgameSplash = () => {\r\n\tconst room = useRoom();\r\n\tconst history = useHistory();\r\n\tconst clearMessages = useClearMessages();\r\n\tconst leave = () => {\r\n\t\troom.leave();\r\n\t\thistory.push('/');\r\n\t\twindow.localStorage.removeItem('@@Colosyius_GC_kings_cup');\r\n\t};\r\n\tconst remake = () => {\r\n\t\troom.send(remakeGame());\r\n\t\tclearMessages();\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"endgame-splash\">\r\n\t\t\t<h1>Game complete!</h1>\r\n\t\t\t<button onClick={remake} type=\"button\">\r\n\t\t\t\tPlay again\r\n\t\t\t</button>\r\n\t\t\t<button onClick={leave} type=\"button\" className=\"leave\">\r\n\t\t\t\tLeave\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EndgameSplash;\r\n",
		"import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { drawCard } from '@kings-cup/shared/actions';\r\nimport { useScrollLock } from '../../util/hooks';\r\nimport { cardDescription } from '../../util/cards';\r\nimport { useGameState, useOnMessageReceived } from './../../@library/GameConnector';\r\nimport PlayerList from '../../components/PlayerList';\r\nimport Gameboard from './Gameboard';\r\nimport { getCardImage } from './../../util/image';\r\nimport EndgameSpash from './EndgameSpash';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getPlayerByIndex = players => i => players[Object.keys(players)[i]];\r\nconst getPlayerName = player => player.name || player.id;\r\n\r\nexport const GameScreen = () => {\r\n\tuseScrollLock();\r\n\tconst history = useHistory();\r\n\tconst { state = {}, getSelf } = useGameState();\r\n\tconst { active, players = {}, deck } = state;\r\n\tconst activePlayer = getPlayerByIndex(players)(active) || {};\r\n\tconst self = getSelf() || {};\r\n\tconst yourTurn = activePlayer.id === self.id;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (!state.hasStarted) {\r\n\t\t\thistory.push('/game/lobby');\r\n\t\t}\r\n\t}, [state.hasStarted]);\r\n\r\n\tuseOnMessageReceived(message => {\r\n\t\tif (message.type === drawCard.toString()) {\r\n\t\t\ttoast.warning(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img src={getCardImage(message.card)} className=\"AvatarContainer AvatarContainer--card\" />\r\n\t\t\t\t\t<img src={players[message.player].avatar} className=\"AvatarContainer\" />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{getPlayerName(players[message.player])} just drew a {cardDescription(message.card)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{message.rule || \"No rule defined for this card... I guess you're playing it by ear\"}!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\tconst isGameOver = (deck || []).filter(({ isDrawn } = {}) => !isDrawn).length === 0;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"column-layout container gameboard\"\r\n\t\t\t\tstyle={isGameOver ? { filter: 'brightness(0.3)' } : {}}\r\n\t\t\t>\r\n\t\t\t\t{!isGameOver && <h1>It's {yourTurn ? 'your' : `${getPlayerName(activePlayer)}'s`} turn</h1>}\r\n\t\t\t\t<PlayerList />\r\n\t\t\t\t<Gameboard canDraw={yourTurn && !isGameOver} />\r\n\t\t\t</div>\r\n\t\t\t{isGameOver && <EndgameSpash />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GameScreen;\r\n",
		"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useGameState, useRoom } from '../@library/GameConnector';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './GameNavigation.css';\r\n\r\nexport const GameNavigation = () => {\r\n\tconst { state } = useGameState();\r\n\tconst room = useRoom();\r\n\tconst history = useHistory();\r\n\tuseLocation();\r\n\r\n\tconst handleLeave = () => {\r\n\t\tconst result = state?.hasStarted\r\n\t\t\t? window.confirm('Are you sure? There is a game in progress!')\r\n\t\t\t: true;\r\n\t\tif (result) {\r\n\t\t\troom.leave();\r\n\t\t\thistory.push('/');\r\n\t\t\twindow.localStorage.removeItem('@@Colosyius_GC_kings_cup');\r\n\t\t}\r\n\t};\r\n\tconst renderHeader = hidden => (\r\n\t\t<div className={`Header${hidden ? ' is-hidden' : ''}`}>\r\n\t\t\t{history.length > 1 && (\r\n\t\t\t\t<div className=\"Header-actionBar\">\r\n\t\t\t\t\t{!state?.hasStarted && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span className=\"spacer\" />\r\n\t\t\t\t\t{!!state && <button onClick={handleLeave}>Leave</button>}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"Header-title\">\r\n\t\t\t\t<h1>Kings Cup</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{renderHeader(true)}\r\n\t\t\t{renderHeader(false)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameNavigation;\r\n",
		"import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport { LobbyScreen, EditScreen, DrawScreen } from './feature/Lobby';\r\nimport GameScreen from './feature/PlayGame';\r\nimport GameConnector from './@library/GameConnector';\r\nimport GameNavigation from './components/GameNavigation';\r\n\r\nexport const GameRouter = () => {\r\n\tconst { path } = useRouteMatch();\r\n\tconst { hostname } = window?.location ?? {};\r\n\tconst decorator = process.env.NODE_ENV === 'production' ? ':2567' : ':2567';\r\n\r\n\treturn (\r\n\t\t<GameConnector roomId=\"kings_cup\" url={`ws://${hostname}${decorator}`}>\r\n\t\t\t<GameNavigation />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path={`${path}/lobby`}>\r\n\t\t\t\t\t<LobbyScreen />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/lobby/edit`}>\r\n\t\t\t\t\t<EditScreen />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/lobby/draw`}>\r\n\t\t\t\t\t<DrawScreen />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/play`}>\r\n\t\t\t\t\t<GameScreen />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Redirect to={`${path}/lobby`} />\r\n\t\t\t</Switch>\r\n\t\t</GameConnector>\r\n\t);\r\n};\r\n\r\nexport default GameRouter;\r\n",
		"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport HomeScreen from './feature/HomePage';\r\nimport FindScreen from './feature/FindGame';\r\nimport GameRouter from './GameRouter';\r\n\r\nexport const Game = () => (\r\n\t<>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t<HomeScreen />\r\n\t\t\t</Route>\r\n\t\t\t<Route exact path=\"/find\">\r\n\t\t\t\t<FindScreen />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/game\">\r\n\t\t\t\t<GameRouter />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t</>\r\n);\r\n\r\nexport default Game;\r\n",
		"import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Game from './Game';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const App = () => (\n\t<BrowserRouter>\n\t\t<ToastContainer\n\t\t\tposition=\"top-center\"\n\t\t\tautoClose={false}\n\t\t\thideProgressBar={false}\n\t\t\tnewestOnTop={false}\n\t\t\tcloseOnClick\n\t\t\trtl={false}\n\t\t\tpauseOnVisibilityChange\n\t\t\tdraggable\n\t\t\tpauseOnHover\n\t\t\tdraggablePercent={40}\n\t\t/>\n\t\t<Game />\n\t</BrowserRouter>\n);\nexport default App;\n",
		"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl, { scope: '/' })\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n",
		"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"
	],
	"sourceRoot": ""
}
